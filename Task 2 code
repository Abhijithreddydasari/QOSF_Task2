from qiskit import QuantumCircuit, execute, Aer
from qiskit.quantum_info import Statevector

def is_rectangle(A, B, C, D):
    # Check that all inputs are positive integers
    if not all(isinstance(x, int) and x > 0 for x in [A, B, C, D]):
        raise ValueError("All inputs must be positive integers")

    # Check if a rectangle with sides A, B, C, and D exists
    if A == B and C == D:
        return 1
    elif A == C and B == D:
        return 1
    elif A == D and B == C:
        return 1
    else:
        # Create the quantum circuit
        qc = QuantumCircuit(4)
        qc.h(range(4))
        qc.barrier()

        # Apply the controlled-NOT gate
        qc.cx(0, 2)
        qc.cx(1, 3)
        qc.barrier()

        # Apply the H gate
        qc.h(range(4))
        qc.barrier()

        # Measure all qubits
        qc.measure_all()

        # Print the quantum circuit
        print(qc)

        # Execute the quantum circuit
        sv_sim = Aer.get_backend('statevector_simulator')
        job = execute(qc, sv_sim, shots=1)
        statevec = Statevector.from_instruction(qc)
        probabilities = statevec.probabilities_dict()

        # Check if the output is |0011>, indicating that a rectangle exists
        if probabilities['0011'] == 1:
            return 1
        else:
            return 0
